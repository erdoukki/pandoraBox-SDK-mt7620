menuconfig IMAGEOPT
	bool "Image configuration"
	default n
source "package/*/image-config.in"
menu "Base system"

	config PACKAGE_libc
		tristate "libc........................................................... C library"
		default y if DEFAULT_libc
		default m if ALL
		select PACKAGE_libgcc
		help
		 C library
		 Felix Fietkau <nbd@openwrt.org>


		menu "Configuration"
		depends on EXTERNAL_TOOLCHAIN && PACKAGE_libc
	
		config LIBC_ROOT_DIR
			string
			prompt "libc shared library base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libc
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LIBC_FILE_SPEC
			string
			prompt "libc shared library files (use wildcards)"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libc
			default "./lib/ld{-*.so,-linux*.so.*} ./lib/lib{anl,c,cidn,crypt,dl,m,nsl,nss_dns,nss_files,resolv,util}{-*.so,.so.*}"
	
		endmenu

	config PACKAGE_libgcc
		tristate "libgcc............................................... GCC support library"
		default y if DEFAULT_libgcc
		default m if ALL
		help
		 GCC support library
		 http://gcc.gnu.org/
		 Felix Fietkau <nbd@openwrt.org>


		menu "Configuration"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libgcc
	
		config LIBGCC_ROOT_DIR
			string
			prompt "libgcc shared library base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libgcc
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LIBGCC_FILE_SPEC
			string
			prompt "libgcc shared library files (use wildcards)"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libgcc
			default "./lib/libgcc_s.so.*"
	
		endmenu

	config PACKAGE_libgfortran
		tristate "libgfortran..................................... GFortran support library"
		default y if DEFAULT_libgfortran
		default m if ALL
		depends on INSTALL_GFORTRAN
		help
		 GFortran support library
		 http://gcc.gnu.org/
		 Felix Fietkau <nbd@openwrt.org>


		menu "Configuration"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libgfortran
	
		config LIBGFORTRAN_ROOT_DIR
			string
			prompt "libgfortran shared library base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libgfortran
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LIBGFORTRAN_FILE_SPEC
			string
			prompt "libgfortran shared library files (use wildcards)"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libgfortran
			default "./usr/lib/libgfortran.so.*"
	
		endmenu

	config PACKAGE_libgo
		tristate "libgo................................................ GGo support library"
		default y if DEFAULT_libgo
		default m if ALL
		depends on INSTALL_GCCGO
		help
		 GGo support library
		 http://gcc.gnu.org/
		 Felix Fietkau <nbd@openwrt.org>


		menu "Configuration"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libgo
	
		config LIBGGO_ROOT_DIR
			string
			prompt "libgo shared library base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libgo
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LIBGGO_FILE_SPEC
			string
			prompt "libgo shared library files (use wildcards)"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libgo
			default "./usr/lib/libgo.so.*"
	
		endmenu

	config PACKAGE_libpthread
		tristate "libpthread.......................................... POSIX thread library"
		default y if DEFAULT_libpthread
		default m if ALL
		select PACKAGE_libgcc
		help
		 POSIX thread library
		 Felix Fietkau <nbd@openwrt.org>


		menu "Configuration"
		depends on EXTERNAL_TOOLCHAIN && PACKAGE_libpthread
	
		config LIBPTHREAD_ROOT_DIR
			string
			prompt "libpthread shared library base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libpthread
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LIBPTHREAD_FILE_SPEC
			string
			prompt "libpthread shared library files (use wildcards)"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libpthread
			default "./lib/libpthread{-*.so,.so.*}"
	
		endmenu

	config PACKAGE_librt
		tristate "librt................................ POSIX.1b RealTime extension library"
		default y if DEFAULT_librt
		default m if ALL
		select PACKAGE_libpthread
		help
		 POSIX.1b RealTime extension library
		 Felix Fietkau <nbd@openwrt.org>


		menu "Configuration"
		depends on EXTERNAL_TOOLCHAIN && PACKAGE_librt
	
		config LIBRT_ROOT_DIR
			string
			prompt "librt shared library base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_librt
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LIBRT_FILE_SPEC
			string
			prompt "librt shared library files (use wildcards)"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_librt
			default "./lib/librt{-*.so,.so.*}"
	
		endmenu

	config PACKAGE_libssp
		tristate "libssp............................................... GCC support library"
		default y if DEFAULT_libssp
		default m if ALL
		depends on SSP_SUPPORT
		help
		 GCC support library
		 http://gcc.gnu.org/
		 Felix Fietkau <nbd@openwrt.org>


		menu "Configuration"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libssp
	
		config LIBSSP_ROOT_DIR
			string
			prompt "libssp shared library base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libssp
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LIBSSP_FILE_SPEC
			string
			prompt "libssp shared library files (use wildcards)"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libssp
			default "./lib/libssp.so.*"
	
		endmenu

	config PACKAGE_libstdcpp
		tristate "libstdcpp.................................... GNU Standard C++ Library v3"
		default y if DEFAULT_libstdcpp
		default m if ALL
		help
		 GNU Standard C++ Library v3
		 http://gcc.gnu.org/
		 Felix Fietkau <nbd@openwrt.org>


		menu "Configuration"
		depends on EXTERNAL_TOOLCHAIN && PACKAGE_libstdcpp
	
		config LIBSTDCPP_ROOT_DIR
			string
			prompt "libstdcpp shared library base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libstdcpp
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LIBSTDCPP_FILE_SPEC
			string
			prompt "libstdc++ shared library files (use wildcards)"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libstdcpp
			default "./lib/libstdc++.so.*"
	
		endmenu

	config PACKAGE_libthread-db
		tristate "libthread-db...................... POSIX thread library debugging support"
		default y if DEFAULT_libthread-db
		default m if ALL
		depends on !USE_MUSL
		help
		 POSIX thread library debugging support
		 Felix Fietkau <nbd@openwrt.org>

endmenu

menu "Kernel modules"

menu "Block Devices"
endmenu
menu "CAN Support"
endmenu
menu "Cryptographic API modules"
endmenu
menu "Filesystems"
endmenu
menu "FireWire support"
endmenu
menu "Hardware Monitoring Support"
endmenu
menu "I2C support"
endmenu
menu "Input modules"
endmenu
menu "LED modules"
endmenu
menu "Libraries"
endmenu
menu "Native Language Support"
endmenu
menu "Netfilter Extensions"
endmenu
menu "Network Devices"
endmenu
menu "Network Support"
endmenu
menu "Other modules"
endmenu
menu "PCMCIA support"
endmenu
menu "Ralink Drivers"
endmenu
menu "SPI Support"
endmenu
menu "Sound Support"
endmenu
menu "USB Support"
endmenu
menu "Video Support"
endmenu
menu "Virtualization Support"
endmenu
menu "W1 support"
endmenu
menu "Wireless Drivers"
endmenu
endmenu

menu "Network"

	config PACKAGE_shadowsocksr-libev
		tristate "shadowsocksr-libev............ Lightweight Secured Socks5 Proxy (OpenSSL)"
		default y if DEFAULT_shadowsocksr-libev
		default m if ALL
		select PACKAGE_zlib
		select PACKAGE_libpthread
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_libc
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_libpcre
		select PACKAGE_libopenssl
		select PACKAGE_libssp if SSP_SUPPORT
		help
		 ShadowsocksR-libev is a lightweight secured socks5 proxy for embedded devices and low end boxes.
		 https://github.com/shadowsocksr/shadowsocksr-libev
		 breakwa11

	config PACKAGE_shadowsocksr-libev-mbedtls
		tristate "shadowsocksr-libev-mbedtls.... Lightweight Secured Socks5 Proxy (mbedTLS)"
		default y if DEFAULT_shadowsocksr-libev-mbedtls
		default m if ALL
		select PACKAGE_libssp if SSP_SUPPORT
		select PACKAGE_libmbedtls
		select PACKAGE_libpcre
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_libc
		select PACKAGE_libpthread
		help
		 ShadowsocksR-libev is a lightweight secured socks5 proxy for embedded devices and low end boxes.
		 https://github.com/shadowsocksr/shadowsocksr-libev
		 breakwa11

	config PACKAGE_shadowsocksr-libev-polarssl
		tristate "shadowsocksr-libev-polarssl.. Lightweight Secured Socks5 Proxy (PolarSSL)"
		default y if DEFAULT_shadowsocksr-libev-polarssl
		default m if ALL
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_libpcre
		select PACKAGE_libssp if SSP_SUPPORT
		select PACKAGE_libpolarssl
		select PACKAGE_libc
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_libpthread
		help
		 ShadowsocksR-libev is a lightweight secured socks5 proxy for embedded devices and low end boxes.
		 https://github.com/shadowsocksr/shadowsocksr-libev
		 breakwa11

	config PACKAGE_shadowsocksr-libev-server
		tristate "shadowsocksr-libev-server..... Lightweight Secured Socks5 Proxy (OpenSSL)"
		default y if DEFAULT_shadowsocksr-libev-server
		default m if ALL
		select PACKAGE_libssp if SSP_SUPPORT
		select PACKAGE_zlib
		select PACKAGE_libpthread
		select PACKAGE_libc
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_libpcre
		select PACKAGE_libopenssl
		help
		 ShadowsocksR-libev is a lightweight secured socks5 proxy for embedded devices and low end boxes.
		 https://github.com/shadowsocksr/shadowsocksr-libev
		 breakwa11

	config PACKAGE_shadowsocksr-libev-server-mbedtls
		tristate "shadowsocksr-libev-server-mbedtls"
		default y if DEFAULT_shadowsocksr-libev-server-mbedtls
		default m if ALL
		select PACKAGE_libpcre
		select PACKAGE_libmbedtls
		select PACKAGE_libssp if SSP_SUPPORT
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_libpthread
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_libc
		help
		 ShadowsocksR-libev is a lightweight secured socks5 proxy for embedded devices and low end boxes.
		 https://github.com/shadowsocksr/shadowsocksr-libev
		 breakwa11

	config PACKAGE_shadowsocksr-libev-server-polarssl
		tristate "shadowsocksr-libev-server-polarssl"
		default y if DEFAULT_shadowsocksr-libev-server-polarssl
		default m if ALL
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_libpolarssl
		select PACKAGE_libc
		select PACKAGE_libpthread
		select PACKAGE_libssp if SSP_SUPPORT
		select PACKAGE_libpcre
		select PACKAGE_librt if USE_GLIBC
		help
		 ShadowsocksR-libev is a lightweight secured socks5 proxy for embedded devices and low end boxes.
		 https://github.com/shadowsocksr/shadowsocksr-libev
		 breakwa11

endmenu

menu "Utilities"

	config PACKAGE_ldconfig
		tristate "ldconfig............................... Shared library path configuration"
		default y if DEFAULT_ldconfig
		default m if ALL
		depends on !USE_MUSL
		help
		 Shared library path configuration
		 Felix Fietkau <nbd@openwrt.org>


		menu "Configuration"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_ldconfig
	
		config LDCONFIG_ROOT_DIR
			string
			prompt "ldconfig base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_ldconfig
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LDCONFIG_FILE_SPEC
			string
			prompt "ldconfig file"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_ldconfig
			default "./sbin/ldconfig"
	
		endmenu

	config PACKAGE_ldd
		tristate "ldd.................................................... LDD trace utility"
		default y if DEFAULT_ldd
		default m if ALL
		depends on !USE_MUSL
		help
		 LDD trace utility
		 Felix Fietkau <nbd@openwrt.org>


		menu "Configuration"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_ldd
	
		config LDD_ROOT_DIR
			string
			prompt "ldd trace utility base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_ldd
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LDD_FILE_SPEC
			string
			prompt "ldd trace utility file"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_ldd
			default "./usr/bin/ldd"
	
		endmenu

endmenu

